/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_SRC_ONEOF_PB_H_INCLUDED
#define PB_SRC_ONEOF_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _MSG_TYPE {
    MSG_TYPE_MSG_TYPE_NONE = 0,
    MSG_TYPE_MSG_TYPE_1 = 1,
    MSG_TYPE_MSG_TYPE_2 = 2
} MSG_TYPE;
#define _MSG_TYPE_MIN MSG_TYPE_MSG_TYPE_NONE
#define _MSG_TYPE_MAX MSG_TYPE_MSG_TYPE_2
#define _MSG_TYPE_ARRAYSIZE ((MSG_TYPE)(MSG_TYPE_MSG_TYPE_2+1))

/* Struct definitions */
typedef struct _SubMsg2 {
    pb_callback_t texts;
    pb_callback_t vals;
/* @@protoc_insertion_point(struct:SubMsg2) */
} SubMsg2;


typedef struct _SubMsg1 {
    pb_callback_t text;
    int32_t val;
/* @@protoc_insertion_point(struct:SubMsg1) */
} SubMsg1;


typedef struct _TopMsg {
    pb_callback_t sfield;
    int32_t ifield;
    MSG_TYPE type;
    pb_size_t which_payload;
    union {
        SubMsg1 sub1;
        SubMsg2 sub2;
    } payload;
/* @@protoc_insertion_point(struct:TopMsg) */
} TopMsg;


/* Initializer values for message structs */
#define SubMsg1_init_default                     {{{NULL}, NULL}, 0}
#define SubMsg2_init_default                     {{{NULL}, NULL}, {{NULL}, NULL}}
#define TopMsg_init_default                      {{{NULL}, NULL}, 0, _MSG_TYPE_MIN, 0, {SubMsg1_init_default}}
#define SubMsg1_init_zero                        {{{NULL}, NULL}, 0}
#define SubMsg2_init_zero                        {{{NULL}, NULL}, {{NULL}, NULL}}
#define TopMsg_init_zero                         {{{NULL}, NULL}, 0, _MSG_TYPE_MIN, 0, {SubMsg1_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define SubMsg2_texts_tag                        1
#define SubMsg2_vals_tag                         2
#define SubMsg1_text_tag                         1
#define SubMsg1_val_tag                          2
#define TopMsg_sub1_tag                          40
#define TopMsg_sub2_tag                          50
#define TopMsg_sfield_tag                        1
#define TopMsg_ifield_tag                        2
#define TopMsg_type_tag                          3

/* Struct field encoding specification for nanopb */
#define SubMsg1_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING, text, 1) \
X(a, STATIC, SINGULAR, INT32, val, 2)
#define SubMsg1_CALLBACK pb_default_field_callback
#define SubMsg1_DEFAULT NULL

#define SubMsg2_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, STRING, texts, 1) \
X(a, CALLBACK, REPEATED, INT32, vals, 2)
#define SubMsg2_CALLBACK pb_default_field_callback
#define SubMsg2_DEFAULT NULL

#define TopMsg_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING, sfield, 1) \
X(a, STATIC, SINGULAR, INT32, ifield, 2) \
X(a, STATIC, SINGULAR, UENUM, type, 3) \
X(a, STATIC, ONEOF, MESSAGE, (payload,sub1,payload.sub1), 40) \
X(a, STATIC, ONEOF, MESSAGE, (payload,sub2,payload.sub2), 50)
#define TopMsg_CALLBACK pb_default_field_callback
#define TopMsg_DEFAULT NULL
#define TopMsg_payload_sub1_MSGTYPE SubMsg1
#define TopMsg_payload_sub2_MSGTYPE SubMsg2

extern const pb_msgdesc_t SubMsg1_msg;
extern const pb_msgdesc_t SubMsg2_msg;
extern const pb_msgdesc_t TopMsg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SubMsg1_fields &SubMsg1_msg
#define SubMsg2_fields &SubMsg2_msg
#define TopMsg_fields &TopMsg_msg

/* Maximum encoded size of messages (where known) */
/* SubMsg1_size depends on runtime parameters */
/* SubMsg2_size depends on runtime parameters */
/* TopMsg_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
